#!/usr/bin/env bash

##  Copyright (c) 2022, DURUYAO. All rights reserved.
##
##  Licensed under the Apache License, Version 2.0 (the "License");
##  you may not use this file except in compliance with the License.
##  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
##  Unless required by applicable law or agreed to in writing, software
##  distributed under the License is distributed on an "AS IS" BASIS,
##  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##  See the License for the specific language governing permissions and
##  limitations under the License.

## date:   2022-02-22
## author: duruao@gmail.com
## desc:   the application dock-duck entry

set -euo pipefail

dk_home="$(dirname "$(realpath "$0")")"
dk_data_home="${dk_home}/dk-data"
dk_tools_home="${dk_home}/dk-tools"

mkdir -p "${dk_home}"
mkdir -p "${dk_data_home}"
mkdir -p "${dk_tools_home}"

dk_containers_file="${dk_data_home}"/containers.txt
if [ ! -f "${dk_containers_file}" ]; then
  echo "" >"${dk_containers_file}"
fi

function errorln() {
  printf "\033[1;32;31m%s\n\033[m" "${1}"
}

function warningln() {
  printf "\033[1;33m%s\n\033[m" "${1}"
}

function show_version() {
  cat <<EOF
DockDuck v2022.03.28
EOF
}

function show_usage() {
  cat "${dk_data_home}"/duck.logo
  cat <<EOF
Usage: dk [OPTIONS] [COMMAND]

Tools for using dock-duck containers

Options:
  -h, --help                    Display this help message
  -v, --version                 Print version information and quit

Commands:
  attach                        Attach to a running dock-duck container
  detach                        Launch a new dock-duck container in the background
  images                        List images
  ps                            List running dock-duck containers
  run                           Run a command in a new dock-duck container
  stop                          Stop one or more running containers
  update                        Update dock-duck tools

Run 'dk COMMAND --help' for more information on a command

See more about DockDuck at https://github.com/duruyao/DockDuck

EOF
}

if [ -z "$(command -v docker)" ]; then
  errorln "Error: 'docker' required but not found" >&2
  show_usage >&2
  exit 1
fi

if [ 0 == $# ]; then
  show_usage
  exit 0
fi

## parse arguments
while (($#)); do
  case "$1" in
  -h | --help)
    show_usage
    exit 0
    ;;

  -v | --version)
    show_version
    exit 0
    ;;

  attach)
    shift 1
    "${dk_tools_home}"/dk-attach "$@"
    exit 0
    ;;

  detach)
    shift 1
    "${dk_tools_home}"/dk-detach "$@"
    exit 0
    ;;

  images)
    shift 1
    "${dk_tools_home}"/dk-images "$@"
    exit 0
    ;;

  ps)
    shift 1
    "${dk_tools_home}"/dk-ps "$@"
    exit 0
    ;;

  run)
    shift 1
    "${dk_tools_home}"/dk-run "$@"
    exit 0
    ;;

  stop)
    shift 1
    "${dk_tools_home}"/dk-stop "$@"
    exit 0
    ;;

  update)
    shift 1
    "${dk_tools_home}"/dk-update "$@"
    exit 0
    ;;

  *)
    docker_replace_dk=""
    warningln "Warning: Unsupported option: '$1'"
    printf "replace 'dk' with 'docker' ? [Y/n] "
    read -r docker_replace_dk
    if echo "${docker_replace_dk}" | grep -q -E "n|no|N|No|NO"; then
      show_usage >&2
      exit 1
    else
      docker "$@"
      exit 0
    fi
    ;;
  esac
done
